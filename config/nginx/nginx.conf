

events {}

http {
    include mime.types;
    server {
        listen 80;
        # будет отдавать при 200 'OK' при вхождении строки /health-check в url
        # location /health-check {
            # return 200 'OK';
        # }
        # строгое равенство
        location = /health-check {
            return 200 'OK';
        }
        location / {
            proxy_pass http://kibana:5601;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /ekl/es45-gb64-gn89-gn/ {
            # Убираем префикс /ekl/es45-gb64-gn89-gn/ из URI
            rewrite ^/ekl/es45-gb64-gn89-gn/(.*) /$1 break;

            # Проксирование на внутренний сервис
            proxy_pass https://es01:9200;

            # Передача клиентского сертификата
            proxy_set_header X-Client-Certificate $ssl_client_cert;

            # Передача заголовков Basic Authentication
            proxy_set_header Authorization $http_authorization;

            # Дополнительные заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }
}